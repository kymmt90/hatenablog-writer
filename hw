#!/usr/bin/env ruby

require './hb_writer'
require 'optparse'

def warn_and_exit(message)
  warn message
  exit 1
end

OPTS = {}
CATEGORIES = []
OptionParser.new do |opt|
  opt.banner = 'Usage: hw [options] entry_file ...'.freeze

  opt.on('-c [CATEGORY]', 'specify category') { |v| CATEGORIES << v }
  opt.on('-d', '--delete', 'delete entry from blog') { |v| OPTS[:d] = v }
  opt.on('-u', '--update', 'update entry') { |v| OPTS[:u] = v }
  opt.on('-m', '--minor-update',
         'update entry without changing updated datetime') { |v| OPTS[:m] = v }

  begin
    opt.parse!(ARGV)
  rescue => error
    puts error
    warn_and_exit(opt.help)
  end

  num_on_opts = OPTS.select { |k, v| v == true }.size.freeze
  warn_and_exit(opt.help) if num_on_opts > 1 || ARGV.size == 0
end

writer = HBWriter.new
ARGV.each do |file_name|
  entry_text = ''
  open(file_name, 'r') do |f|
    if OPTS[:d]
      entry_text = writer.delete_entry(f.read)
    elsif OPTS[:u]
      writer.update_entry(f.read, CATEGORIES)
    elsif OPTS[:m]
      writer.minor_update_entry(f.read, CATEGORIES)
    else
      entry_text = writer.post_entry(f.read, CATEGORIES)
    end
  end

  # write entry ID to text file
  unless entry_text.empty?
    open(file_name, 'w') do |f|
      f.write(entry_text)
    end
  end
end
